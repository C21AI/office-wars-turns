app ProjectBird {
  wasp: {
    version: "^0.10.2"
  },
  title: "Office Wars - A Strategy Game",
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login"
  },
  client: {
    rootComponent: import App from "@client/App",
  },
}

// üì° Wasp Routes

route RootRoute { path: "/", to: MainPage }
page MainPage {
  authRequired: true,
  component: import Main from "@client/MainPage"
}

route GameRoute { path: "/game", to: GamePage }
page GamePage {
  authRequired: true,
  component: import GamePage from "@client/GamePage"
}

route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/auth/SignupPage"
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/auth/LoginPage"
}

// üìö Queries

query getTank {
  fn: import { getTank } from "@server/queries.js",
  entities: [Tank]
}

query getGame {
  fn: import { getGame } from "@server/queries.js",
  entities: [Game, User]
}

// üìù Actions

action addTank {
  fn: import { addTank } from "@server/actions.js",
  entities: [Tank]
}

action updateTank {
  fn: import { updateTank } from "@server/actions.js",
  entities: [Tank, Game]
}

action removeTank {
  fn: import { removeTank } from "@server/actions.js",
  entities: [Tank, Game]
}

action generateGame {
  fn: import { generateGame } from "@server/actions.js",
  entities: [Game, User]
}

action abandonGame {
  fn: import { abandonGame } from "@server/actions.js",
  entities: [User]
}

action joinGame {
  fn: import { joinGame } from "@server/actions.js",
  entities: [Game, User]
}

action launchGame {
  fn: import { launchGame } from "@server/actions.js",
  entities: [Game, User]
}

// üì¶ Entities

entity User {=psl
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
  tank     Tank?
  game     Game?  @relation(fields: [gameId], references: [id])
  gameId   Int?
psl=}

entity Tank {=psl
  id          Int    @id @default(autoincrement())
  user        User   @relation(fields: [userId], references: [id])
  userId      Int    @unique
  agility     Int    @default(1)
  armor       Int    @default(1)
  accuracy    Int    @default(1)
  attackPower Int    @default(1)
  color       String @default("353f4a")
psl=}

entity Game {=psl
  id         Int       @id @default(autoincrement())
  code       String    @unique
  users      User[]
  state      String    @default("lobby") // should be an enum but that's not supported yet
  started_at DateTime?
  ended_at   DateTime?
psl=}
